1���������
<dependency>
	<groupId>org.eclipse.jetty</groupId>
	<artifactId>jetty-server</artifactId>
	<version>9.4.12.RC2</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.eclipse.jetty</groupId>
	<artifactId>jetty-webapp</artifactId>
	<version>9.4.12.RC2</version>
	<scope>test</scope>
</dependency>

2�����������
public class JettySpringMVCStart {

	public static final int PORT = 8080;

	// web���ʵĸ�·��http://ip:port/���൱����Ŀ��,/��������Ŀ��
	public static final String CONTEXT_PATH= "/xxx";

	private static final String DEFAULT_WEBAPP_PATH = "src/main/webapp";

	public static Server createServerIn(int port) {
		// ����Server
		Server server = new Server(port);

		WebAppContext webContext = new WebAppContext(DEFAULT_WEBAPP_PATH, CONTEXT_PATH);
		//webContext.setDescriptor(DEFAULT_WEBAPP_PATH+"/WEB-INF/web.xml");
		//webContext.setResourceBase(DEFAULT_WEBAPP_PATH);
		//webContext.setClassLoader(Thread.currentThread().getContextClassLoader());
		//server.setHandler(webContext);
		server.insertHandler(webContext);
		return server;
	}

	public static void main(String[] args) throws Exception {
		//DOMConfigurator.configure(Thread.currentThread().getContextClassLoader().getResource("log4j.xml"));
		Server server = createServerIn(PORT);
		server.stop();
		server.start();
		server.join();
	}
}

3��ִ��main��������

�����ԣ��������ַ�����������tomcat������30�����ҡ�
���Ҫ������context��Ŀǰ��û�о���ô֧�֡�
		
		